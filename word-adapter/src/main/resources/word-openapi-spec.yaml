openapi: 3.0.3
info:
  title: Six Letter Words API
  version: 1.2.2
servers:
  - url: http://localhost:8080
tags:
  - name: word
    description: process words
paths:
  /word:
    post:
      tags:
        - word
      operationId: processWordFile
      summary: Searching for words within a file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        201:
          description: File successfully processed
          headers:
            Location:
              description: The location where the resource was created
              schema:
                type: string
                example: /word/2deaad99-d8a1-45bd-8e0f-788e154cf44e
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordResponseResource'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponseResource'
    get:
      tags:
        - word
      operationId: getWordFiles
      summary: Find all files
      responses:
        200:
          description: Request successfully processed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordFileResponseResource'
  /word/{id}:
    get:
      tags:
        - word
      operationId: getWordFileById
      summary: Find result by id
      parameters:
        - name: id
          in: path
          description: file id
          required: true
          schema:
            type: string
            example: 2deaad99-d8a1-45bd-8e0f-788e154cf44e
      responses:
        200:
          description: Request successfully processed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordResponseResource'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponseResource'
components:
  schemas:
    WordResponseResource:
      required:
        - result
        - parts
      type: object
      properties:
        result:
          type: string
          description: Word found within the file
          example: foobar
        parts:
          type: array
          items:
            type: string
          description: List of substrings used to construct the word
          example:
            - fo
            - bar
    WordFileResponseResource:
      required:
        - id
        - file
      type: object
      properties:
        id:
          type: string
          description: Id of the upload
          example: 2deaad99-d8a1-45bd-8e0f-788e154cf44e
        file:
          type: string
          description: Filename of the upload
          example: 1728555000_file.txt
    ProblemDetailResponseResource:
      required:
        - title
        - status
        - detail
        - instance
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type
          example: Empty file
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
          example: Empty file, please upload a valid file with text
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem
          example: /word
